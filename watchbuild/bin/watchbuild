#!/usr/bin/env ruby

$:.push File.expand_path("../../lib", __FILE__)

require 'watchbuild'
require 'commander'
require 'credentials_manager/appfile_config'
require 'watchbuild/options'

HighLine.track_eof = false

class WatchBuildApplication
  include Commander::Methods

  def run
    program :version, WatchBuild::VERSION
    program :description, WatchBuild::DESCRIPTION
    program :help, 'Author', 'Felix Krause <watchbuild@krausefx.com>'
    program :help, 'Website', 'https://fastlane.tools'
    program :help, 'GitHub', 'https://github.com/fastlane/watchbuild'
    program :help_formatter, :compact

    global_option('--verbose') { $verbose = true }

    FastlaneCore::CommanderGenerator.new.generate(WatchBuild::Options.available_options)

    command :run do |c|
      c.syntax = 'watchbuild'
      c.description = 'Renews the certificate (in case it expired) and outputs the path to the generated file'

      c.action do |args, options|
        WatchBuild.config = FastlaneCore::Configuration.create(WatchBuild::Options.available_options, options.__hash__)
        WatchBuild::Runner.new.run
      end
    end

    default_command :run

    run!
  end

  def multiple_values_option_proc(command, name)
    proc do |value|
      value = yield(value) if block_given?
      option = command.proxy_options.find { |opt| opt[0] == name } || []
      values = option[1] || []
      values << value

      command.proxy_options.delete option
      command.proxy_options << [name, values]
    end
  end
end

begin
  FastlaneCore::UpdateChecker.start_looking_for_update('watchbuild')
  WatchBuildApplication.new.run
ensure
  FastlaneCore::UpdateChecker.show_update_status('watchbuild', WatchBuild::VERSION)
end
